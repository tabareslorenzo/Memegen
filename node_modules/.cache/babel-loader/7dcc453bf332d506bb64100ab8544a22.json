{"ast":null,"code":"var _jsxFileName = \"/Users/tabareslorenz/Documents/page/memes/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Memes from './components/Memes';\nimport Create from './components/Create';\nimport Savedmemes from './components/Savedmemes';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Naviagationbar from './components/Navigationbar';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      memes: {\n        pics: [],\n        loaded: false,\n        selected: false\n      },\n      curImage: {\n        url: '',\n        empty: true,\n        texts: [{\n          string: '',\n          xloc: 0,\n          yloc: 0,\n          id: 0,\n          mving: false\n        }]\n      },\n      savedmemes: [{\n        string: ''\n      }],\n      loggedin: false\n    };\n\n    this.addmeme = str => {\n      const smeme = {\n        string: str\n      };\n      this.setState({\n        savedmemes: [...this.state.savedmemes, smeme]\n      });\n    };\n\n    this.selectImg = curUrl => {\n      this.setState({\n        curImage: {\n          url: curUrl,\n          empty: false,\n          texts: [{\n            string: '',\n            xloc: 0,\n            yloc: 0,\n            id: 0,\n            mving: false\n          }]\n        }\n      });\n    };\n\n    this.loggin = () => {\n      console.log(\"what\");\n      this.setState({\n        loggedin: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://api.imgflip.com/get_memes').then(res => res.json()).then(json => {\n      this.setState({\n        memes: {\n          pics: json.data.memes,\n          loaded: true,\n          selected: false\n        }\n      });\n    });\n    console.log(\"whatwhat\");\n    var token = localStorage.getItem('token');\n    console.log(token);\n\n    if (token) {\n      token = token.substring(6, token.length);\n      console.log(\"whatwhat\");\n      const user = axios.create({\n        baseURL: 'http://localhost:4000/users/meme',\n        timeout: 1000,\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': \"Bearer \" + token\n        }\n      });\n      user.get().then(response => {\n        this.loggin();\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    if (token == null) {\n      this.setState({\n        loggedin: false\n      });\n      console.log(\"yep\");\n      console.log(this.state.loggedin);\n    }\n  }\n\n  render() {\n    /*\n          background -image: url(image_url);\n          background-size: cover;\n          background-attachment: fixed;\n    */\n    var _this$state$memes = this.state.memes,\n        selected = _this$state$memes.selected,\n        loaded = _this$state$memes.loaded,\n        pics = _this$state$memes.pics;\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Naviagationbar, {\n      isloggedin: this.state.loggedin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Create, {\n        curImage: this.state.curImage,\n        addmeme: this.addmeme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(Memes, {\n        memes: pics,\n        selectImg: this.selectImg,\n        text: this.state.curImage.texts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/saved\",\n      render: props => React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Savedmemes, {\n        savedmemes: this.state.savedmemes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      render: props => React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Login, {\n        loggin: this.loggin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(Register, {\n        loggin: this.loggin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tabareslorenz/Documents/page/memes/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Memes","Create","Savedmemes","Login","Register","Naviagationbar","axios","Link","App","state","memes","pics","loaded","selected","curImage","url","empty","texts","string","xloc","yloc","id","mving","savedmemes","loggedin","addmeme","str","smeme","setState","selectImg","curUrl","loggin","console","log","componentDidMount","fetch","then","res","json","data","token","localStorage","getItem","substring","length","user","create","baseURL","timeout","headers","get","response","catch","error","render","props"],"mappings":"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","sourcesContent":["import React, {Component}  from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Memes from './components/Memes';\nimport Create from './components/Create';\nimport Savedmemes from './components/Savedmemes';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Naviagationbar from './components/Navigationbar'\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\n\n\n\nclass App extends Component {\n      state = {\n            memes:{\n                  pics:[],\n                  loaded: false,\n                  selected: false\n            },\n            curImage:{\n                  url:'',\n                  empty:true,\n                  texts:[{\n                        string:'',\n                        xloc: 0,\n                        yloc: 0,\n                        id:0,\n                        mving:false,\n                  }]\n            },\n            savedmemes:[{\n                  string:'',\n            }],\n            loggedin: false\n      }\n      //<Savedmemes savedmemes={this.state.savedmemes}/>\n      addmeme = (str) =>\n      {\n            const smeme = {\n                  string:str,\n            }\n            this.setState({savedmemes: [...this.state.savedmemes, smeme]});\n      }\n      selectImg = (curUrl) =>\n      {\n            this.setState({curImage:\n                  {\n                        url: curUrl,\n                        empty:false,\n                        texts:[\n                              {\n                                    string:'',\n                                    xloc: 0,\n                                    yloc: 0,\n                                    id:0,\n                                    mving:false,\n                              }\n                        ]\n                  }\n            })\n      }\n      loggin = () =>\n      {\n            console.log(\"what\");\n            this.setState({loggedin: true});\n      }\n      componentDidMount()\n      {\n            fetch('https://api.imgflip.com/get_memes').then(res => res.json()).then(json =>\n                  {\n                        this.setState({ memes:\n                              {\n                              pics:  json.data.memes,\n                              loaded: true,\n                              selected: false,\n                              }\n\n                        })\n                  })\n                  console.log(\"whatwhat\");\n                  var token = localStorage.getItem('token');\n                  console.log(token);\n\n                  if(token){\n                        token = token.substring(6, token.length);\n\n                        console.log(\"whatwhat\");\n                        const user = axios.create({\n                              baseURL: 'http://localhost:4000/users/meme',\n                              timeout: 1000,\n                              headers: {'Content-Type': 'application/json', 'Authorization': \"Bearer \" + token}\n\n                        });\n                        user.get()\n                              .then(response => {this.loggin();})\n                              .catch(function(error){\n                                    console.log(error);\n                              })\n                  }\n                  if(token == null)\n                  {\n                        this.setState({loggedin: false})\n                        console.log(\"yep\");\n                        console.log(this.state.loggedin);\n                  }\n      }\n      render(){\n            /*\n                  background -image: url(image_url);\n                  background-size: cover;\n                  background-attachment: fixed;\n            */\n            var {selected, loaded, pics} = this.state.memes;\n            return (\n                   <Router>\n                        <div className=\"App\">\n\n                           <header className=\"App-header\">\n                                 <Naviagationbar isloggedin={this.state.loggedin}></Naviagationbar>\n                           </header>\n                           <Route exact path=\"/\" render={props => (\n                        <React.Fragment>\n                              <Create curImage={this.state.curImage} addmeme={this.addmeme} ></Create>\n                              <Memes memes={pics} selectImg={this.selectImg} text={this.state.curImage.texts} ></Memes>\n                        </React.Fragment>\n                        )}/>\n                  <Route path=\"/saved\" render={props => (\n                        <React.Fragment>\n                              <Savedmemes savedmemes={this.state.savedmemes}/>\n                        </React.Fragment>\n                        )}/>\n\n                  <Route path=\"/login\" render={props => (\n                              <React.Fragment>\n                                    <Login loggin={this.loggin}/>\n                                    <br />\n                                    <Register loggin={this.loggin}/>\n                              </React.Fragment>\n                              )}/>\n\n\n                        </div>\n                  </Router>\n\n\n            );\n\n      }\n\n\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}