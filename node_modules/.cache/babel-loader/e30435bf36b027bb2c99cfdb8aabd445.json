{"ast":null,"code":"var _jsxFileName = \"/Users/tabareslorenz/Documents/page/memes/src/components/Text.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './image.css';\n\nclass Text extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      text: {\n        string: this.props.text.string,\n        xloc: this.props.text.xloc,\n        yloc: this.props.text.yloc,\n        id: this.props.text.id\n      }\n    };\n\n    this.changeloc = e => {\n      console.log(e);\n      console.log(\"change!!!\");\n      this.setState({\n        text: {\n          string: this.props.text.string,\n          xloc: e.clientX,\n          yloc: e.clientY,\n          id: this.props.text.id\n        }\n      });\n    };\n  }\n\n  render() {\n    // this.state.text.addEventListener('mousedown', e => {\n    //       this.state.xloc = e.clientX;\n    //       this.state.yloc = e.clientY;\n    // });\n    return React.createElement(\"text\", {\n      x: this.state.xloc,\n      y: this.state.yloc,\n      onMouseDown: event => this.changeloc(event),\n      onMouseUp: event => this.changeloc(event),\n      style: txtStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, this.state.text.string);\n  }\n\n}\n\nText.proTypes = {\n  text: PropTypes.object.isRequired\n};\nconst txtStyle = {\n  color: '#fff',\n  fontSize: '40px'\n};\nexport default Text;","map":{"version":3,"sources":["/Users/tabareslorenz/Documents/page/memes/src/components/Text.js"],"names":["React","Component","PropTypes","Text","state","text","string","props","xloc","yloc","id","changeloc","e","console","log","setState","clientX","clientY","render","event","txtStyle","proTypes","object","isRequired","color","fontSize"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,aAAP;;AAGA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACvBG,KADuB,GACf;AACFC,MAAAA,IAAI,EACE;AACMC,QAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWF,IAAX,CAAgBC,MAD9B;AAEME,QAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWF,IAAX,CAAgBG,IAF5B;AAGMC,QAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWF,IAAX,CAAgBI,IAH5B;AAIMC,QAAAA,EAAE,EAAE,KAAKH,KAAL,CAAWF,IAAX,CAAgBK;AAJ1B;AAFJ,KADe;;AAAA,SAavBC,SAbuB,GAaVC,CAAD,IAAO;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,WAAKC,QAAL,CAAc;AAACV,QAAAA,IAAI,EAAC;AACpBC,UAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWF,IAAX,CAAgBC,MADJ;AAEpBE,UAAAA,IAAI,EAAEI,CAAC,CAACI,OAFY;AAGpBP,UAAAA,IAAI,EAAEG,CAAC,CAACK,OAHY;AAIpBP,UAAAA,EAAE,EAAE,KAAKH,KAAL,CAAWF,IAAX,CAAgBK;AAJA;AAAN,OAAd;AAML,KAtBsB;AAAA;;AAwBvBQ,EAAAA,MAAM,GAAI;AACJ;AACA;AACA;AACA;AAIA,WAAO;AAAM,MAAA,CAAC,EAAE,KAAKd,KAAL,CAAWI,IAApB;AAA0B,MAAA,CAAC,EAAE,KAAKJ,KAAL,CAAWK,IAAxC;AAA8C,MAAA,WAAW,EAAEU,KAAK,IAAI,KAAKR,SAAL,CAAeQ,KAAf,CAApE;AAA2F,MAAA,SAAS,EAAEA,KAAK,IAAI,KAAKR,SAAL,CAAeQ,KAAf,CAA/G;AAAsI,MAAA,KAAK,EAAEC,QAA7I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwJ,KAAKhB,KAAL,CAAWC,IAAX,CAAgBC,MAAxK,CAAP;AAEL;;AAlCsB;;AAqC7BH,IAAI,CAACkB,QAAL,GAAgB;AACVhB,EAAAA,IAAI,EAAEH,SAAS,CAACoB,MAAV,CAAiBC;AADb,CAAhB;AAGA,MAAMH,QAAQ,GAAG;AACXI,EAAAA,KAAK,EAAE,MADI;AAEXC,EAAAA,QAAQ,EAAC;AAFE,CAAjB;AAIA,eAAetB,IAAf","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport './image.css';\n\n\nclass Text extends Component {\n      state = {\n            text:\n                  {\n                        string: this.props.text.string,\n                        xloc: this.props.text.xloc,\n                        yloc: this.props.text.yloc,\n                        id: this.props.text.id,\n                  }\n      }\n      // componentDidMount() {\n      //       this.state.text.addEventListener(\"mousedown\", this.changeloc.bind(this, e));\n      // }\n      changeloc = (e) => {\n            console.log(e);\n            console.log(\"change!!!\");\n            this.setState({text:{\n            string: this.props.text.string,\n            xloc: e.clientX,\n            yloc: e.clientY,\n            id: this.props.text.id,\n            }});\n      }\n\n      render () {\n            // this.state.text.addEventListener('mousedown', e => {\n            //       this.state.xloc = e.clientX;\n            //       this.state.yloc = e.clientY;\n            // });\n\n\n\n            return <text x={this.state.xloc} y={this.state.yloc} onMouseDown={event => this.changeloc(event)} onMouseUp={event => this.changeloc(event)} style={txtStyle}>{this.state.text.string}</text>\n\n      }\n}\n\nText.proTypes = {\n      text: PropTypes.object.isRequired\n}\nconst txtStyle = {\n      color: '#fff',\n      fontSize:'40px',\n}\nexport default Text;\n"]},"metadata":{},"sourceType":"module"}